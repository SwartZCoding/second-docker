version: '1'

services:
  # Service PostgreSQL
  postgres-db:
    image: postgres:alpine
    environment:
      POSTGRES_USER: adonis_user
      POSTGRES_PASSWORD: adonis_password
      POSTGRES_DB: adonis_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network

  # AdonisJS Backend
  adonis-backend:
    build:
      context: ./backend
    ports:
      - "3333:3333"
    environment:
      DB_CONNECTION: pg
      DB_HOST: postgres-db
      DB_PORT: 5432
      DB_USER: adonis_user
      DB_PASSWORD: /run/secrets/db_password
      DB_DATABASE: adonis_db
      APP_KEY: /run/secrets/app_key
      HOST: 0.0.0.0
      NODE_ENV: ${NODE_ENV:-development}
    secrets:
      - db_password
      - app_key
    depends_on:
      - postgres-db
    networks:
      - app-network

    # Volume et commande pour le mode développement
    profiles:
      - dev
    volumes:
      - ./backend:/app
    command: npm run dev

    # Commande pour le mode production (sans volume pour garder l'app compilée)
    profiles:
      - prod
    command: npm run start


  # Nuxt 3 Frontend
  nuxt-frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    environment:
      API_URL: http://adonis-backend:3333
    depends_on:
      - adonis-backend
    networks:
      - app-network

# Volumes pour la persistance de la base de données
volumes:
  pgdata:

# Réseau pour la communication entre les services
networks:
  app-network:
    driver: bridge

secrets:
  db_password:
    external: true
  app_key:
    external: true
